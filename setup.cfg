[metadata]
name = rmnest
version = 0.2.0
author = Marcus Lower
author_email = mlower@swin.edu.au
url = https://github.com/mlower/rmnest
description = Faraday rotation measurement for pulsars and FRBs
long_description = file: README.md
long_description_content_type = text/markdown
license = MIT
classifiers =
    Operating System :: OS Independent
    License :: OSI Approved :: MIT License
    Programming Language :: Python :: 3 :: Only
    Programming Language :: Python :: 3.7
    Programming Language :: Python :: 3.8
    Programming Language :: Python :: 3.9
    Intended Audience :: Science/Research
    Topic :: Scientific/Engineering :: Astronomy

[options]
zip_safe = false
include_package_data = false
packages = find:
python_requires = >=3.7
install_requires =
    future
    numpy
    scipy
    matplotlib
    bilby
    uncertainties
    importlib_metadata

[options.entry_points]
console_scripts =
    rmnest = rmnest.app:main

[options.extras_require]
tests =
    pytest
    pytest-cov

[flake8]
ignore =
    # Default ignore
    BLK100,
    # Line break
    W503,
    # print
    T001,
    # Isort
    I,
    # Trailing commas
    C81,
    # Quotes
    Q0,
    # Docs
    D, RST210,
    # WPS
    WPS100, WPS110,
    WPS210, WPS220, WPS237,
    WPS305, WPS306, WPS317, WPS323, WPS326, WPS352, WPS358, WPS362,
    WPS410, WPS412, WPS421, WPS432
    WPS600, WPS601, WPS602,
    # bandit
    S101, S105, S404, S602, S607,
    # whitespace before colon
    E203
exclude = .git, .eggs, __pycache__, docs/, old/, build/, dist/
max-imports = 20
max-methods = 30
max-attributes = 30
max-arguments = 20
max-complexity = 10
max-expressions = 20
max-string-usages = 20
max-cognitive-score = 20
max-line-complexity = 40
max-module-members = 20
max-module-expressions = 20
max-function-expressions = 10
max-local-variables = 10
max-line-length = 127
rst-roles =
    attr,class,func,meth,mod,obj,ref,term,
    # C programming language:
    c:member,
    # Python programming language:
    py:func,py:mod,py:obj


[darglint]
docstring_style=numpy


[tool:pytest]
minversion = 6
testpaths = tests

[coverage:run]
omit =
    *setup.py
	*__init__.py
	*tests*
	*docs*

[coverage:report]
show_missing = True
ignore_errors = True
#fail_under = 85
exclude_lines =
	raise AssertionError
	raise NotImplementedError

[coverage:paths]
source = ./

[mypy]
ignore_missing_imports = True